<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="info" file="Xst" num="1561" delta="new" >&quot;<arg fmt="%s" index="1">/home/pdp/Dropbox/MARK CODE/PLASMABRANDAH/rtl/bus_mux.vhd</arg>&quot; line <arg fmt="%d" index="2">84</arg>: Mux is complete : default of case is discarded
</msg>

<msg type="warning" file="Xst" num="790" delta="new" >&quot;<arg fmt="%s" index="1">/home/pdp/Dropbox/MARK CODE/PLASMABRANDAH/rtl/cache.vhd</arg>&quot; line <arg fmt="%d" index="2">96</arg>: Index value(s) does not match array range, simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="new" >Contents of array &lt;<arg fmt="%s" index="1">block_to</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="warning" file="Xst" num="790" delta="new" >&quot;<arg fmt="%s" index="1">/home/pdp/Dropbox/MARK CODE/PLASMABRANDAH/rtl/cache.vhd</arg>&quot; line <arg fmt="%d" index="2">96</arg>: Index value(s) does not match array range, simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="new" >Contents of array &lt;<arg fmt="%s" index="1">block_to</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1561" delta="new" >&quot;<arg fmt="%s" index="1">/home/pdp/Dropbox/MARK CODE/PLASMABRANDAH/rtl/cache.vhd</arg>&quot; line <arg fmt="%d" index="2">117</arg>: Mux is complete : default of case is discarded
</msg>

<msg type="warning" file="Xst" num="795" delta="new" >&quot;<arg fmt="%s" index="1">/home/pdp/Dropbox/MARK CODE/PLASMABRANDAH/rtl/ddr_ctrl.vhd</arg>&quot; line <arg fmt="%d" index="2">328</arg>: Size of operands are different : result is &lt;false&gt;.
</msg>

<msg type="info" file="Xst" num="2117" delta="new" >HDL ADVISOR - Mux Selector &lt;<arg fmt="%s" index="1">init_step</arg>&gt; of Case statement line <arg fmt="%s" index="2">65</arg> was re-encoded using one-hot encoding. The case statement will be optimized (default statement optimization), but this optimization may lead to design initialization problems. To ensure the design works safely, you can:
	- add an &apos;<arg fmt="%s" index="3">INIT</arg>&apos; attribute on signal &lt;<arg fmt="%s" index="4">init_step</arg>&gt; (optimization is then done without any risk)
	- use the attribute &apos;<arg fmt="%s" index="5">signal_encoding</arg> <arg fmt="%s" index="6">user</arg>&apos; to avoid onehot optimization
	- use the attribute &apos;<arg fmt="%s" index="7">safe_implementation</arg> <arg fmt="%s" index="8">yes</arg>&apos; to force XST to perform a safe (but less efficient) optimization
</msg>

<msg type="info" file="Xst" num="2117" delta="new" >HDL ADVISOR - Mux Selector &lt;<arg fmt="%s" index="1">init_step</arg>&gt; of Case statement line <arg fmt="%s" index="2">65</arg> was re-encoded using one-hot encoding. The case statement will be optimized (default statement optimization), but this optimization may lead to design initialization problems. To ensure the design works safely, you can:
	- add an &apos;<arg fmt="%s" index="3">INIT</arg>&apos; attribute on signal &lt;<arg fmt="%s" index="4">init_step</arg>&gt; (optimization is then done without any risk)
	- use the attribute &apos;<arg fmt="%s" index="5">signal_encoding</arg> <arg fmt="%s" index="6">user</arg>&apos; to avoid onehot optimization
	- use the attribute &apos;<arg fmt="%s" index="7">safe_implementation</arg> <arg fmt="%s" index="8">yes</arg>&apos; to force XST to perform a safe (but less efficient) optimization
</msg>

<msg type="info" file="Xst" num="2117" delta="new" >HDL ADVISOR - Mux Selector &lt;<arg fmt="%s" index="1">init_step</arg>&gt; of Case statement line <arg fmt="%s" index="2">65</arg> was re-encoded using one-hot encoding. The case statement will be optimized (default statement optimization), but this optimization may lead to design initialization problems. To ensure the design works safely, you can:
	- add an &apos;<arg fmt="%s" index="3">INIT</arg>&apos; attribute on signal &lt;<arg fmt="%s" index="4">init_step</arg>&gt; (optimization is then done without any risk)
	- use the attribute &apos;<arg fmt="%s" index="5">signal_encoding</arg> <arg fmt="%s" index="6">user</arg>&apos; to avoid onehot optimization
	- use the attribute &apos;<arg fmt="%s" index="7">safe_implementation</arg> <arg fmt="%s" index="8">yes</arg>&apos; to force XST to perform a safe (but less efficient) optimization
</msg>

<msg type="info" file="Xst" num="2117" delta="new" >HDL ADVISOR - Mux Selector &lt;<arg fmt="%s" index="1">init_step</arg>&gt; of Case statement line <arg fmt="%s" index="2">65</arg> was re-encoded using one-hot encoding. The case statement will be optimized (default statement optimization), but this optimization may lead to design initialization problems. To ensure the design works safely, you can:
	- add an &apos;<arg fmt="%s" index="3">INIT</arg>&apos; attribute on signal &lt;<arg fmt="%s" index="4">init_step</arg>&gt; (optimization is then done without any risk)
	- use the attribute &apos;<arg fmt="%s" index="5">signal_encoding</arg> <arg fmt="%s" index="6">user</arg>&apos; to avoid onehot optimization
	- use the attribute &apos;<arg fmt="%s" index="7">safe_implementation</arg> <arg fmt="%s" index="8">yes</arg>&apos; to force XST to perform a safe (but less efficient) optimization
</msg>

<msg type="info" file="Xst" num="2117" delta="new" >HDL ADVISOR - Mux Selector &lt;<arg fmt="%s" index="1">init_step</arg>&gt; of Case statement line <arg fmt="%s" index="2">65</arg> was re-encoded using one-hot encoding. The case statement will be optimized (default statement optimization), but this optimization may lead to design initialization problems. To ensure the design works safely, you can:
	- add an &apos;<arg fmt="%s" index="3">INIT</arg>&apos; attribute on signal &lt;<arg fmt="%s" index="4">init_step</arg>&gt; (optimization is then done without any risk)
	- use the attribute &apos;<arg fmt="%s" index="5">signal_encoding</arg> <arg fmt="%s" index="6">user</arg>&apos; to avoid onehot optimization
	- use the attribute &apos;<arg fmt="%s" index="7">safe_implementation</arg> <arg fmt="%s" index="8">yes</arg>&apos; to force XST to perform a safe (but less efficient) optimization
</msg>

<msg type="warning" file="Xst" num="647" delta="new" >Input &lt;<arg fmt="%s" index="1">address&lt;26:25&gt;</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="646" delta="new" >Signal &lt;<arg fmt="%s" index="1">address_ddr&lt;27&gt;</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="647" delta="new" >Input &lt;<arg fmt="%s" index="1">address&lt;31:16&gt;</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="646" delta="new" >Signal &lt;<arg fmt="%s" index="1">block_enable&lt;7:1&gt;</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1781" delta="new" >Signal &lt;<arg fmt="%s" index="1">block_do&lt;7:1&gt;</arg>&gt; is used but never assigned. Tied to default value.
</msg>

<msg type="warning" file="Xst" num="646" delta="new" >Signal &lt;<arg fmt="%s" index="1">no_connect</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="647" delta="new" >Input &lt;<arg fmt="%s" index="1">address&lt;31:16&gt;</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="646" delta="new" >Signal &lt;<arg fmt="%s" index="1">block_enable&lt;7:1&gt;</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1781" delta="new" >Signal &lt;<arg fmt="%s" index="1">block_do&lt;7:1&gt;</arg>&gt; is used but never assigned. Tied to default value.
</msg>

<msg type="warning" file="Xst" num="647" delta="new" >Input &lt;<arg fmt="%s" index="1">cpu_address&lt;31:13&gt;</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="647" delta="new" >Input &lt;<arg fmt="%s" index="1">address_next&lt;31&gt;</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="1780" delta="new" >Signal &lt;<arg fmt="%s" index="1">cache_tag_out</arg>&gt; is never used or assigned. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1780" delta="new" >Signal &lt;<arg fmt="%s" index="1">block_to_selected</arg>&gt; is never used or assigned. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="new" >Signal &lt;<arg fmt="%s" index="1">block_sel&lt;1&gt;</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="new" >Signal &lt;<arg fmt="%s" index="1">cpu_address&lt;1:0&gt;</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="new" >Signal &lt;<arg fmt="%s" index="1">gpio0_out&lt;31:8&gt;</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="647" delta="new" >Input &lt;<arg fmt="%s" index="1">fpga_0_RS232_Uart_1_ctsN_pin</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="647" delta="new" >Input &lt;<arg fmt="%s" index="1">fpga_0_DDR_CLK_FB</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">address_reg_25</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">u2_mem_ctrl</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">address_reg_26</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">u2_mem_ctrl</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">address_reg_27</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">u2_mem_ctrl</arg>&gt;.
</msg>

<msg type="info" file="Xst" num="1901" delta="new" >Instance <arg fmt="%s" index="1">block0.ram_byte3</arg> in unit <arg fmt="%s" index="2">boot_ram</arg> of type <arg fmt="%s" index="3">RAMB16_S9</arg> has been replaced by <arg fmt="%s" index="4">RAMB16</arg>
</msg>

<msg type="info" file="Xst" num="1901" delta="new" >Instance <arg fmt="%s" index="1">block0.ram_byte2</arg> in unit <arg fmt="%s" index="2">boot_ram</arg> of type <arg fmt="%s" index="3">RAMB16_S9</arg> has been replaced by <arg fmt="%s" index="4">RAMB16</arg>
</msg>

<msg type="info" file="Xst" num="1901" delta="new" >Instance <arg fmt="%s" index="1">block0.ram_byte1</arg> in unit <arg fmt="%s" index="2">boot_ram</arg> of type <arg fmt="%s" index="3">RAMB16_S9</arg> has been replaced by <arg fmt="%s" index="4">RAMB16</arg>
</msg>

<msg type="info" file="Xst" num="1901" delta="new" >Instance <arg fmt="%s" index="1">block0.ram_byte0</arg> in unit <arg fmt="%s" index="2">boot_ram</arg> of type <arg fmt="%s" index="3">RAMB16_S9</arg> has been replaced by <arg fmt="%s" index="4">RAMB16</arg>
</msg>

<msg type="info" file="Xst" num="1901" delta="new" >Instance <arg fmt="%s" index="1">block0.ram_byte3</arg> in unit <arg fmt="%s" index="2">cache_ram</arg> of type <arg fmt="%s" index="3">RAMB16_S9</arg> has been replaced by <arg fmt="%s" index="4">RAMB16</arg>
</msg>

<msg type="info" file="Xst" num="1901" delta="new" >Instance <arg fmt="%s" index="1">block0.ram_byte2</arg> in unit <arg fmt="%s" index="2">cache_ram</arg> of type <arg fmt="%s" index="3">RAMB16_S9</arg> has been replaced by <arg fmt="%s" index="4">RAMB16</arg>
</msg>

<msg type="info" file="Xst" num="1901" delta="new" >Instance <arg fmt="%s" index="1">block0.ram_byte1</arg> in unit <arg fmt="%s" index="2">cache_ram</arg> of type <arg fmt="%s" index="3">RAMB16_S9</arg> has been replaced by <arg fmt="%s" index="4">RAMB16</arg>
</msg>

<msg type="info" file="Xst" num="1901" delta="new" >Instance <arg fmt="%s" index="1">block0.ram_byte0</arg> in unit <arg fmt="%s" index="2">cache_ram</arg> of type <arg fmt="%s" index="3">RAMB16_S9</arg> has been replaced by <arg fmt="%s" index="4">RAMB16</arg>
</msg>

<msg type="info" file="Xst" num="1901" delta="new" >Instance <arg fmt="%s" index="1">cache_tag1</arg> in unit <arg fmt="%s" index="2">cache</arg> of type <arg fmt="%s" index="3">RAMB16_S9</arg> has been replaced by <arg fmt="%s" index="4">RAMB16</arg>
</msg>

<msg type="info" file="Xst" num="1901" delta="new" >Instance <arg fmt="%s" index="1">cache_tag2</arg> in unit <arg fmt="%s" index="2">cache</arg> of type <arg fmt="%s" index="3">RAMB16_S9</arg> has been replaced by <arg fmt="%s" index="4">RAMB16</arg>
</msg>

<msg type="info" file="Xst" num="1901" delta="new" >Instance <arg fmt="%s" index="1">u1_plasma_top/u0_clk/DCM_BASE0</arg> in unit <arg fmt="%s" index="2">top_ml410</arg> of type <arg fmt="%s" index="3">DCM_BASE</arg> has been replaced by <arg fmt="%s" index="4">DCM_ADV</arg>
</msg>

<msg type="warning" file="Xst" num="2170" delta="new" >Unit <arg fmt="%s" index="1">cache</arg> : the following signal(s) form a combinatorial loop: </msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">u1_plasma_top/u1_plasma/u1_cpu/u2_mem_ctrl/address_reg_27</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_ml410</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">u1_plasma_top/u1_plasma/u1_cpu/u2_mem_ctrl/address_reg_26</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_ml410</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">u1_plasma_top/u1_plasma/u1_cpu/u2_mem_ctrl/address_reg_25</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">top_ml410</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2398" delta="new" >RAMs &lt;<arg fmt="%s" index="1">u1_plasma_top/u1_plasma/opt_cache2.u_cache/cache_tag1</arg>&gt;, &lt;<arg fmt="%s" index="2">u1_plasma_top/u1_plasma/opt_cache2.u_cache/cache_tag2</arg>&gt; are equivalent
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">u1_plasma_top/u1_plasma/opt_cache2.u_cache/cache_data/block_sel_buf_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">top_ml410</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;u1_plasma_top/u1_plasma/u2_boot_ram/block_sel_buf_0&gt; </arg>
</msg>

</messages>

